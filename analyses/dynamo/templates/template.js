export function render(proposal, constraints, surroudings) {
  return {
    Uuid: "6d98c2b2-bf04-4bad-b304-adadeddd2a7a",
    IsCustomNode: false,
    Description: "",
    Name: "SolidBoolScriptExample",
    ElementResolver: { ResolutionMap: {} },
    Inputs: [
      {
        Id: "57d3a29891014ef89bac997b62da466c",
        Name: "Contraints",
        Type: "string",
        Type2: "string",
        Value: JSON.stringify(constraints),
        Description: "Creates a string",
        SelectedIndex: 0,
      },
      {
        Id: "61ac694796d9473d8c24b94c24df829f",
        Name: "Proposal",
        Type: "string",
        Type2: "string",
        Value: JSON.stringify(proposal),
        Description: "Creates a string",
        SelectedIndex: 0,
      },
      {
        Id: "ed33cc713fd944319fe1d0516b764c4b",
        Name: "Surroundings",
        Type: "string",
        Type2: "string",
        Value: JSON.stringify(surroudings),
        Description: "Creates a string",
        SelectedIndex: 0,
      },
    ],
    Outputs: [],
    Nodes: [
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "128be51ccd74486f8ff58b5ce8ecb73a",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "4ee67eeaab044add853e670a50638e70",
            Name: "json",
            Description: "A JSON string\\n\\nstring",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "f5fb4c021b644c3287cb0c3df443e601",
            Name: "result",
            Description:
              "The result type depends on the content of the input string. The result type can be a primitive value (e.g. string, boolean, double), a List, or a Dictionary.",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature: "DSCore.Data.ParseJSON@string",
        Replication: "Auto",
        Description:
          "Parse converts an arbitrary JSON string to a value. It is the opposite of JSON.Stringify.\\n\\nData.ParseJSON (json: string): var[]..[]",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "fe5908528fba41b8b5e0d95d2613f9ac",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "ce9b1388b70a40d08b090bf773d607a1",
            Name: "list",
            Description: "List to take items from.\\n\\nvar[]..[]",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: true,
            KeepListStructure: false,
          },
          {
            Id: "7ade8d24c9094d63a604c5d5872f750e",
            Name: "n",
            Description:
              "Indices that are multiples of this number (after the offset) will be fetched.\\n\\nint",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
          {
            Id: "681dd97881584b5db698afa9a1509bea",
            Name: "offset",
            Description:
              "Amount of items to be ignored from the start of the list.\\n\\nint\\nDefault value : 0",
            UsingDefaultValue: true,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "29e36af783d84cc28447321ada9c4d26",
            Name: "items",
            Description: "Items from the list.",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature: "DSCore.List.TakeEveryNthItem@var[]..[],int,int",
        Replication: "Auto",
        Description:
          "Fetches items from the given list at indices that are multiples of the given value, after the given offset.\\n\\nList.TakeEveryNthItem (list: var[]..[], n: int, offset: int = 0): var[]..[]",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
        Id: "9b6ef37dc479493892dbb6b3554ae569",
        NodeType: "CodeBlockNode",
        Inputs: [],
        Outputs: [
          {
            Id: "5e6305f8887c43598c84237130186a3e",
            Name: "",
            Description: "Value of expression at line 1",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
          {
            Id: "e2bae82fc57f4d688f8455577f433a22",
            Name: "",
            Description: "Value of expression at line 2",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Replication: "Disabled",
        Description: "Allows for DesignScript code to be authored directly",
        Code: "3;-2;",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "83e724cc9677448fab744e4c47940982",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "9ad608ef914c42a8a470c21bfad35916",
            Name: "list",
            Description: "List to take items from.\\n\\nvar[]..[]",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: true,
            KeepListStructure: false,
          },
          {
            Id: "b727ec3a1187458fae89d88c7746e6e1",
            Name: "n",
            Description:
              "Indices that are multiples of this number (after the offset) will be fetched.\\n\\nint",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
          {
            Id: "91b7bf8be8db415bb6ca7c60b97936db",
            Name: "offset",
            Description:
              "Amount of items to be ignored from the start of the list.\\n\\nint\\nDefault value : 0",
            UsingDefaultValue: true,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "b97df1e1c42d45498ec0487b1b7685d5",
            Name: "items",
            Description: "Items from the list.",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature: "DSCore.List.TakeEveryNthItem@var[]..[],int,int",
        Replication: "Auto",
        Description:
          "Fetches items from the given list at indices that are multiples of the given value, after the given offset.\\n\\nList.TakeEveryNthItem (list: var[]..[], n: int, offset: int = 0): var[]..[]",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "82acc36839f24d77a669fa1c2b793f69",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "50297af81c3a4070a556a2a1024943c5",
            Name: "list",
            Description: "List to take items from.\\n\\nvar[]..[]",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: true,
            KeepListStructure: false,
          },
          {
            Id: "62c406e8851d40da8edd6f4cb7c47ad8",
            Name: "n",
            Description:
              "Indices that are multiples of this number (after the offset) will be fetched.\\n\\nint",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
          {
            Id: "108649bb535e46b38f0f23e8d25e679e",
            Name: "offset",
            Description:
              "Amount of items to be ignored from the start of the list.\\n\\nint\\nDefault value : 0",
            UsingDefaultValue: true,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "5e17b192f97c4a60a728cd4392a37a58",
            Name: "items",
            Description: "Items from the list.",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature: "DSCore.List.TakeEveryNthItem@var[]..[],int,int",
        Replication: "Auto",
        Description:
          "Fetches items from the given list at indices that are multiples of the given value, after the given offset.\\n\\nList.TakeEveryNthItem (list: var[]..[], n: int, offset: int = 0): var[]..[]",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "c5755ae5f27646be9ba72089ddb3a878",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "a7c031daf9b9442d914199cbcb26d759",
            Name: "x",
            Description: "X coordinate\\n\\ndouble\\nDefault value : 0",
            UsingDefaultValue: true,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
          {
            Id: "71d99855994f4740b1c2030ceb900cdd",
            Name: "y",
            Description: "Y coordinate\\n\\ndouble\\nDefault value : 0",
            UsingDefaultValue: true,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
          {
            Id: "df62c130a4e74be791823d3893af1427",
            Name: "z",
            Description: "Z coordinate\\n\\ndouble\\nDefault value : 0",
            UsingDefaultValue: true,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "76bee2da2787499e9681bc0badec6d82",
            Name: "Point",
            Description: "Point created by coordinates",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature:
          "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
        Replication: "Auto",
        Description:
          "Form a Point given 3 cartesian coordinates\\n\\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "20b2ecc9a2274451b5318b5dd3e556b9",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "e72eaaf04e95447082a6dd8e504692b4",
            Name: "list",
            Description: "List to chop into sublists\\n\\nvar[]..[]",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: true,
            KeepListStructure: false,
          },
          {
            Id: "c53178c1dce244219ce0a8e816a464c6",
            Name: "lengths",
            Description:
              "Lengths of consecutive sublists to be created from the input list\\n\\nint[]",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "915d95f3e0724919bc64a73494ffc831",
            Name: "lists",
            Description: "Sublists created from the list",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature: "DSCore.List.Chop@var[]..[],int[]",
        Replication: "Auto",
        Description:
          "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\\n\\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "21f1d60e83a4458bae841a0f1c6b74ac",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "46243ea5c9c946719f006ce79a80ae1a",
            Name: "points",
            Description: "Points to make polycurve\\n\\nPoint[]",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: true,
            KeepListStructure: true,
          },
          {
            Id: "534084f6763c438990308ba8c8c13e86",
            Name: "connectLastToFirst",
            Description:
              "True to connect last point to first point, false to leave open\\n\\nbool\\nDefault value : false",
            UsingDefaultValue: true,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "701ad3fe71c84ed4aed2ab5ad9c3ad5f",
            Name: "PolyCurve",
            Description: "Polycurve created by points",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature:
          "Autodesk.DesignScript.Geometry.PolyCurve.ByPoints@Autodesk.DesignScript.Geometry.Point[],bool",
        Replication: "Auto",
        Description:
          "Make PolyCurve by connecting points. Set the 'connectLastToFirst' input to true to close the PolyCurve.\\n\\nPolyCurve.ByPoints (points: Point[], connectLastToFirst: bool = false): PolyCurve",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
        Id: "fd40022429224e60a6e04ea81b715fd6",
        NodeType: "CodeBlockNode",
        Inputs: [],
        Outputs: [
          {
            Id: "b3dd41fcfbc843a090c53923194f662d",
            Name: "",
            Description: "Value of expression at line 1",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Replication: "Disabled",
        Description: "Allows for DesignScript code to be authored directly",
        Code: "true;",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "70bf67c97a7a41ecad20923943ec209a",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "7a46b92ea0d84547848218b13c0c2d8c",
            Name: "json",
            Description: "A JSON string\\n\\nstring",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "7a038b23d7a547f490dbd64d3da72df6",
            Name: "result",
            Description:
              "The result type depends on the content of the input string. The result type can be a primitive value (e.g. string, boolean, double), a List, or a Dictionary.",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature: "DSCore.Data.ParseJSON@string",
        Replication: "Auto",
        Description:
          "Parse converts an arbitrary JSON string to a value. It is the opposite of JSON.Stringify.\\n\\nData.ParseJSON (json: string): var[]..[]",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
        Id: "1e9cca661e45491091fa8a18dba4800c",
        NodeType: "CodeBlockNode",
        Inputs: [],
        Outputs: [
          {
            Id: "b313846bf8cb4e9fbac8c30f9c06aab0",
            Name: "",
            Description: "Value of expression at line 1",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
          {
            Id: "a3d6d9b2c86a42eba6674fc7a6780cbf",
            Name: "",
            Description: "Value of expression at line 2",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Replication: "Disabled",
        Description: "Allows for DesignScript code to be authored directly",
        Code: "3;-2;",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "7db6ab9c9b7345c999bb95e378877100",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "b0857d232336490cb0ea116badc6d8af",
            Name: "list",
            Description: "List to take items from.\\n\\nvar[]..[]",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: true,
            KeepListStructure: false,
          },
          {
            Id: "405f8fbb83e84e158bc77c2f3a043ec0",
            Name: "n",
            Description:
              "Indices that are multiples of this number (after the offset) will be fetched.\\n\\nint",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
          {
            Id: "b5db1379abc442ad9bd77133dd295fa9",
            Name: "offset",
            Description:
              "Amount of items to be ignored from the start of the list.\\n\\nint\\nDefault value : 0",
            UsingDefaultValue: true,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "70040a3f34d144c59ba47fcc52d464fe",
            Name: "items",
            Description: "Items from the list.",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature: "DSCore.List.TakeEveryNthItem@var[]..[],int,int",
        Replication: "Auto",
        Description:
          "Fetches items from the given list at indices that are multiples of the given value, after the given offset.\\n\\nList.TakeEveryNthItem (list: var[]..[], n: int, offset: int = 0): var[]..[]",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "9c82d01f09264c3e9bf5ce46e6778300",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "96ac31a2345144bdb6a3aea51437a239",
            Name: "list",
            Description: "List to take items from.\\n\\nvar[]..[]",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: true,
            KeepListStructure: false,
          },
          {
            Id: "4926f54dc4494b64bbbc13d221bbf49c",
            Name: "n",
            Description:
              "Indices that are multiples of this number (after the offset) will be fetched.\\n\\nint",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
          {
            Id: "10cfc1e46fbb4a41ac930facf519c215",
            Name: "offset",
            Description:
              "Amount of items to be ignored from the start of the list.\\n\\nint\\nDefault value : 0",
            UsingDefaultValue: true,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "825768281bf146bcad6f430ac7912c2f",
            Name: "items",
            Description: "Items from the list.",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature: "DSCore.List.TakeEveryNthItem@var[]..[],int,int",
        Replication: "Auto",
        Description:
          "Fetches items from the given list at indices that are multiples of the given value, after the given offset.\\n\\nList.TakeEveryNthItem (list: var[]..[], n: int, offset: int = 0): var[]..[]",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
        Id: "70a8691e4ccf42e28564e5e5bf785714",
        NodeType: "CodeBlockNode",
        Inputs: [],
        Outputs: [
          {
            Id: "0b04d336785843c1be25ea5d33215e4e",
            Name: "",
            Description: "Value of expression at line 1",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Replication: "Disabled",
        Description: "Allows for DesignScript code to be authored directly",
        Code: "-1;",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "4fff2d6b564a488285cc34348515352f",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "834fda1794954c429d95b7578c1d0d1d",
            Name: "x",
            Description: "X coordinate\\n\\ndouble\\nDefault value : 0",
            UsingDefaultValue: true,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
          {
            Id: "fe4eb93bc623459aa051014eafa69246",
            Name: "y",
            Description: "Y coordinate\\n\\ndouble\\nDefault value : 0",
            UsingDefaultValue: true,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
          {
            Id: "fd16ec048c6146a28b4c50109d9d40b3",
            Name: "z",
            Description: "Z coordinate\\n\\ndouble\\nDefault value : 0",
            UsingDefaultValue: true,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "bcc55bec2f674a508733c88933192a47",
            Name: "Point",
            Description: "Point created by coordinates",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature:
          "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
        Replication: "Auto",
        Description:
          "Form a Point given 3 cartesian coordinates\\n\\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "9218748837134c49842f1e95d5a34797",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "aaf69b910c1c4224abfa0ea09d1a39ea",
            Name: "list",
            Description: "List to take items from.\\n\\nvar[]..[]",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: true,
            KeepListStructure: false,
          },
          {
            Id: "80550ade68cf491aa47647665622521b",
            Name: "n",
            Description:
              "Indices that are multiples of this number (after the offset) will be fetched.\\n\\nint",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
          {
            Id: "bf749903557f4142bcdc7aeb2d24b41c",
            Name: "offset",
            Description:
              "Amount of items to be ignored from the start of the list.\\n\\nint\\nDefault value : 0",
            UsingDefaultValue: true,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "da8806554ef84088b5f588f608c979c2",
            Name: "items",
            Description: "Items from the list.",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature: "DSCore.List.TakeEveryNthItem@var[]..[],int,int",
        Replication: "Auto",
        Description:
          "Fetches items from the given list at indices that are multiples of the given value, after the given offset.\\n\\nList.TakeEveryNthItem (list: var[]..[], n: int, offset: int = 0): var[]..[]",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "1002017481704f15adf8903b198c467f",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "a6940b20bc024483aea613f63e9e4e28",
            Name: "list",
            Description: "List to chop into sublists\\n\\nvar[]..[]",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: true,
            KeepListStructure: false,
          },
          {
            Id: "637f845a30594af5a38bbaa412a0fa43",
            Name: "lengths",
            Description:
              "Lengths of consecutive sublists to be created from the input list\\n\\nint[]",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "b219b87ba74a4e6b99b63666ec499343",
            Name: "lists",
            Description: "Sublists created from the list",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature: "DSCore.List.Chop@var[]..[],int[]",
        Replication: "Auto",
        Description:
          "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\\n\\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
        Id: "2edd85c3af2c48e5b1a49b556419eeb2",
        NodeType: "CodeBlockNode",
        Inputs: [],
        Outputs: [
          {
            Id: "88a4b43a6cf24349bb077509489639dc",
            Name: "",
            Description: "Value of expression at line 1",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Replication: "Disabled",
        Description: "Allows for DesignScript code to be authored directly",
        Code: "true;",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "d928b939c4554f3cb252738de89c37f0",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "bd18ae0ed10146f48dcebfcd84721935",
            Name: "points",
            Description: "Points to make polycurve\\n\\nPoint[]",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: true,
            KeepListStructure: true,
          },
          {
            Id: "748c7210f0194709a1c5fb5bc6f55838",
            Name: "connectLastToFirst",
            Description:
              "True to connect last point to first point, false to leave open\\n\\nbool\\nDefault value : false",
            UsingDefaultValue: true,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "bda30a34568f4e0ca7688b8effd6d75f",
            Name: "PolyCurve",
            Description: "Polycurve created by points",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature:
          "Autodesk.DesignScript.Geometry.PolyCurve.ByPoints@Autodesk.DesignScript.Geometry.Point[],bool",
        Replication: "Auto",
        Description:
          "Make PolyCurve by connecting points. Set the 'connectLastToFirst' input to true to close the PolyCurve.\\n\\nPolyCurve.ByPoints (points: Point[], connectLastToFirst: bool = false): PolyCurve",
      },
      {
        ConcreteType: "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
        Id: "b88272adde26402e825c547ff709f4b7",
        NodeType: "BooleanInputNode",
        Inputs: [],
        Outputs: [
          {
            Id: "7d939de09692439291a7c6c20435cb53",
            Name: "",
            Description: "Boolean",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Replication: "Disabled",
        Description: "Enables selection between True and False",
        InputValue: false,
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "3b37fa58cb5d420d9626b9ae62ddd10e",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "7775ad9487ed47ec840774aae8fe82b6",
            Name: "list",
            Description:
              "List containing nulls and empty sublists to clean\\n\\nvar[]..[]",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: true,
            KeepListStructure: false,
          },
          {
            Id: "646af92c4f084598bb0a4f60f81fa56b",
            Name: "preserveIndices",
            Description:
              "Provide an option to preserve the indices of the data\\n\\nbool\\nDefault value : true",
            UsingDefaultValue: true,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "08932e07e88042568c8704d99af5f8b7",
            Name: "list",
            Description: "List of transposed lists",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature: "DSCore.List.Clean@var[]..[],bool",
        Replication: "Auto",
        Description:
          "Cleans data of nulls and empty lists from a given list of arbitrary dimension\\n\\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]",
      },
      {
        ConcreteType: "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
        Id: "b80edbf25018439c8e8f763db645580c",
        NodeType: "BooleanInputNode",
        Inputs: [],
        Outputs: [
          {
            Id: "08f7f90ed09d4a4893dac00b9484e203",
            Name: "",
            Description: "Boolean",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Replication: "Disabled",
        Description: "Enables selection between True and False",
        InputValue: false,
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "87a61d815e44460fbd909815ae1ec6d7",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "5460a77a349446589fc96d2e367c52f0",
            Name: "list",
            Description:
              "List containing nulls and empty sublists to clean\\n\\nvar[]..[]",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: true,
            KeepListStructure: false,
          },
          {
            Id: "397aa33faddd41dab46fbd5aae129897",
            Name: "preserveIndices",
            Description:
              "Provide an option to preserve the indices of the data\\n\\nbool\\nDefault value : true",
            UsingDefaultValue: true,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "98271401ca894209989d2a48eb95e24b",
            Name: "list",
            Description: "List of transposed lists",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature: "DSCore.List.Clean@var[]..[],bool",
        Replication: "Auto",
        Description:
          "Cleans data of nulls and empty lists from a given list of arbitrary dimension\\n\\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "cc677d46c8f14616bb4ae51ed8c15d6d",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "3c09848cf3894a4e8fb32e0557819c91",
            Name: "closedCurve",
            Description: "Closed curve used as surface boundary\\n\\nCurve",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "49c0d6c821fb4fc083d3327c45edeb58",
            Name: "Surface",
            Description: "Surface created by patch",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature:
          "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
        Replication: "Auto",
        Description:
          "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\\n\\nSurface.ByPatch (closedCurve: Curve): Surface",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "606dd537fbd44b9aa806e301c41daf2e",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "911a36b78046473eb9fcbe5788303580",
            Name: "facesOfSolid",
            Description: "Surface[]",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "8a89b057d36a4e74a6d37bd2eda41c20",
            Name: "Solid",
            Description: "Solid",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature:
          "Autodesk.DesignScript.Geometry.Solid.ByJoinedSurfaces@Autodesk.DesignScript.Geometry.Surface[]",
        Replication: "Auto",
        Description:
          "Create a solid by specifying it's component faces as Surfaces.\\n\\nSolid.ByJoinedSurfaces (facesOfSolid: Surface[]): Solid",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "d5eda0e3ecee43fb913f8b2287ac43c8",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "12e452687fa84a2294d3ab3265ec6feb",
            Name: "closedCurve",
            Description: "Closed curve used as surface boundary\\n\\nCurve",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "364184da95694daeb3ff478ac822fd3d",
            Name: "Surface",
            Description: "Surface created by patch",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature:
          "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
        Replication: "Auto",
        Description:
          "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\\n\\nSurface.ByPatch (closedCurve: Curve): Surface",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "73df0dde4dee45b4bc2d340f9ef095e3",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "9e8d1db2c4a341a0862a7f80477f5ad5",
            Name: "facesOfSolid",
            Description: "Surface[]",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "3186f688d0a94c7ba2c5f3b26fc28ddf",
            Name: "Solid",
            Description: "Solid",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature:
          "Autodesk.DesignScript.Geometry.Solid.ByJoinedSurfaces@Autodesk.DesignScript.Geometry.Surface[]",
        Replication: "Auto",
        Description:
          "Create a solid by specifying it's component faces as Surfaces.\\n\\nSolid.ByJoinedSurfaces (facesOfSolid: Surface[]): Solid",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "50ab2c51c7b6488180750e6a253225e1",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "be7e577327fe479b8e57f520694d31f1",
            Name: "solid",
            Description: "Autodesk.DesignScript.Geometry.Solid",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
          {
            Id: "3b591bdb90324768acaf0103c44dd030",
            Name: "others",
            Description: "Solid[]",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "02c137be8f57432aaa5334bbb33e5ad9",
            Name: "Solid",
            Description: "Solid",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature:
          "Autodesk.DesignScript.Geometry.Solid.DifferenceAll@Autodesk.DesignScript.Geometry.Solid[]",
        Replication: "Auto",
        Description:
          "The boolean difference of this Solid and the union of input Solids\\n\\nSolid.DifferenceAll (others: Solid[]): Solid",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "1880938c965c4810801e8ab061012adc",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "5dd468cdda5b423f97c6d70f0511039e",
            Name: "geometry",
            Description:
              "The geometry to which you would like to apply color.\\n\\nGeometry",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
          {
            Id: "c7a4087305564f35b3f2b9a06f319006",
            Name: "color",
            Description: "The color.\\n\\nColor",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "da9b91bec6744a22a7e48aa0cafddcdc",
            Name: "GeometryColor",
            Description: "A Display object.",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature:
          "Modifiers.GeometryColor.ByGeometryColor@Autodesk.DesignScript.Geometry.Geometry,DSCore.Color",
        Replication: "Auto",
        Description:
          "Display geometry using a color.\\n\\nGeometryColor.ByGeometryColor (geometry: Geometry, color: Color): GeometryColor",
      },
      {
        ConcreteType: "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
        InputValue: { R: 216, G: 216, B: 216, A: 31 },
        Id: "f637b711d7554fa1a73112793aa168e9",
        NodeType: "ColorInputNode",
        Inputs: [],
        Outputs: [
          {
            Id: "357b9010dc4a478388f1297bbbb08629",
            Name: "Color",
            Description: "Selected Color.",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Replication: "Disabled",
        Description: "Select a Color from the palette",
      },
      {
        ConcreteType: "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
        InputValue: { R: 206, G: 1, B: 1, A: 255 },
        Id: "ee1431a5c6bf40cbb702ea2d46f86457",
        NodeType: "ColorInputNode",
        Inputs: [],
        Outputs: [
          {
            Id: "709d15741ba140d0902aad8b2141a09a",
            Name: "Color",
            Description: "Selected Color.",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Replication: "Disabled",
        Description: "Select a Color from the palette",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "55ac957847964ace98e11c711e326410",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "e751405e2f7b402194cea09a8eb85479",
            Name: "solid",
            Description: "Autodesk.DesignScript.Geometry.Solid",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
          {
            Id: "f1b7e0579a794dc9abb10e3706442d44",
            Name: "other",
            Description: "Solid",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "4d6c1449e91243889515a748585b61d4",
            Name: "Solid",
            Description: "Solid",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature:
          "Autodesk.DesignScript.Geometry.Solid.Difference@Autodesk.DesignScript.Geometry.Solid",
        Replication: "Auto",
        Description:
          "The boolean difference of this Solid with another\\n\\nSolid.Difference (other: Solid): Solid",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
        Id: "b5dfb4ac51a9482496fe46ee182ee371",
        NodeType: "FunctionNode",
        Inputs: [
          {
            Id: "9388436b6e6844538238079976f40472",
            Name: "geometry",
            Description:
              "The geometry to which you would like to apply color.\\n\\nGeometry",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
          {
            Id: "904eaf9a4e8741bd9b408761a88daf00",
            Name: "color",
            Description: "The color.\\n\\nColor",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Outputs: [
          {
            Id: "43b63ada161344688ee5deb4be6cb116",
            Name: "GeometryColor",
            Description: "A Display object.",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        FunctionSignature:
          "Modifiers.GeometryColor.ByGeometryColor@Autodesk.DesignScript.Geometry.Geometry,DSCore.Color",
        Replication: "Auto",
        Description:
          "Display geometry using a color.\\n\\nGeometryColor.ByGeometryColor (geometry: Geometry, color: Color): GeometryColor",
      },
      {
        ConcreteType: "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
        Id: "501390e0b493450698ef5b97b4458b4b",
        NodeType: "CodeBlockNode",
        Inputs: [],
        Outputs: [
          {
            Id: "63fa67781cc641a7b312841f569b6011",
            Name: "",
            Description: "Value of expression at line 1",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Replication: "Disabled",
        Description: "Allows for DesignScript code to be authored directly",
        Code: "-1;",
      },
      {
        ConcreteType: "CoreNodeModels.Input.StringInput, CoreNodeModels",
        Id: "57d3a29891014ef89bac997b62da466c",
        NodeType: "StringInputNode",
        Inputs: [],
        Outputs: [
          {
            Id: "c4c9fd45688744a49839c89d51f5270c",
            Name: "",
            Description: "String",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Replication: "Disabled",
        Description: "Creates a string",
        InputValue: JSON.stringify(constraints),
      },
      {
        ConcreteType: "CoreNodeModels.Input.StringInput, CoreNodeModels",
        Id: "61ac694796d9473d8c24b94c24df829f",
        NodeType: "StringInputNode",
        Inputs: [],
        Outputs: [
          {
            Id: "a092253bf9d646dbbdd30812950ba6ff",
            Name: "",
            Description: "String",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Replication: "Disabled",
        Description: "Creates a string",
        InputValue: JSON.stringify(proposal),
      },
      {
        ConcreteType: "CoreNodeModels.Input.StringInput, CoreNodeModels",
        Id: "ed33cc713fd944319fe1d0516b764c4b",
        NodeType: "StringInputNode",
        Inputs: [],
        Outputs: [
          {
            Id: "af85fbfd74c84ee5a2e64da6131fdbea",
            Name: "",
            Description: "String",
            UsingDefaultValue: false,
            Level: 2,
            UseLevels: false,
            KeepListStructure: false,
          },
        ],
        Replication: "Disabled",
        Description: "Creates a string",
        InputValue: JSON.stringify(surroudings),
      },
    ],
    Connectors: [
      {
        Start: "f5fb4c021b644c3287cb0c3df443e601",
        End: "ce9b1388b70a40d08b090bf773d607a1",
        Id: "5e1385794f6343e9a0cd1bfbcaca046c",
        IsHidden: "False",
      },
      {
        Start: "f5fb4c021b644c3287cb0c3df443e601",
        End: "9ad608ef914c42a8a470c21bfad35916",
        Id: "f61f8e1c8a9d4b0f86751eb687fbd63c",
        IsHidden: "False",
      },
      {
        Start: "f5fb4c021b644c3287cb0c3df443e601",
        End: "50297af81c3a4070a556a2a1024943c5",
        Id: "6076a569ec03472b8bac0d8ebf339142",
        IsHidden: "False",
      },
      {
        Start: "29e36af783d84cc28447321ada9c4d26",
        End: "a7c031daf9b9442d914199cbcb26d759",
        Id: "39e9cc61fa0248a685ae39d2a159a9cd",
        IsHidden: "False",
      },
      {
        Start: "5e6305f8887c43598c84237130186a3e",
        End: "7ade8d24c9094d63a604c5d5872f750e",
        Id: "cb7b6c59a7384c398f8cf783a6fc76a4",
        IsHidden: "False",
      },
      {
        Start: "5e6305f8887c43598c84237130186a3e",
        End: "62c406e8851d40da8edd6f4cb7c47ad8",
        Id: "af8527075b214995b2c0050ae8244f60",
        IsHidden: "False",
      },
      {
        Start: "5e6305f8887c43598c84237130186a3e",
        End: "b727ec3a1187458fae89d88c7746e6e1",
        Id: "8b49e5c9f0bd46d8b2d8116bc2f7b240",
        IsHidden: "False",
      },
      {
        Start: "5e6305f8887c43598c84237130186a3e",
        End: "c53178c1dce244219ce0a8e816a464c6",
        Id: "944bfbd4d70c43ad8a412457097a0d4f",
        IsHidden: "False",
      },
      {
        Start: "e2bae82fc57f4d688f8455577f433a22",
        End: "681dd97881584b5db698afa9a1509bea",
        Id: "23f46de295224d578b7328804ead85d0",
        IsHidden: "False",
      },
      {
        Start: "b97df1e1c42d45498ec0487b1b7685d5",
        End: "71d99855994f4740b1c2030ceb900cdd",
        Id: "ce4d64312651408a9c6f962f18560c8e",
        IsHidden: "False",
      },
      {
        Start: "5e17b192f97c4a60a728cd4392a37a58",
        End: "df62c130a4e74be791823d3893af1427",
        Id: "3fd86fcc7dbc4f95a6b3035156a5bc8f",
        IsHidden: "False",
      },
      {
        Start: "76bee2da2787499e9681bc0badec6d82",
        End: "e72eaaf04e95447082a6dd8e504692b4",
        Id: "f7d0920f2aee4bd098c906bb8ec62f20",
        IsHidden: "False",
      },
      {
        Start: "915d95f3e0724919bc64a73494ffc831",
        End: "46243ea5c9c946719f006ce79a80ae1a",
        Id: "e9c9840b9210476ca8abab0725a572d5",
        IsHidden: "False",
      },
      {
        Start: "701ad3fe71c84ed4aed2ab5ad9c3ad5f",
        End: "7775ad9487ed47ec840774aae8fe82b6",
        Id: "e18aaacc455340fe859ca22dd7c907a2",
        IsHidden: "False",
      },
      {
        Start: "b3dd41fcfbc843a090c53923194f662d",
        End: "534084f6763c438990308ba8c8c13e86",
        Id: "15c4b98da60a4ae691d4d4e0be260b95",
        IsHidden: "False",
      },
      {
        Start: "7a038b23d7a547f490dbd64d3da72df6",
        End: "b0857d232336490cb0ea116badc6d8af",
        Id: "cc2c8b9fce894a0c8fc27dc7e8b9073a",
        IsHidden: "False",
      },
      {
        Start: "7a038b23d7a547f490dbd64d3da72df6",
        End: "96ac31a2345144bdb6a3aea51437a239",
        Id: "d855077f709a4996984b7cd2540c0dc4",
        IsHidden: "False",
      },
      {
        Start: "7a038b23d7a547f490dbd64d3da72df6",
        End: "aaf69b910c1c4224abfa0ea09d1a39ea",
        Id: "a4a09b5b44bc41d8affdf57b433623af",
        IsHidden: "False",
      },
      {
        Start: "b313846bf8cb4e9fbac8c30f9c06aab0",
        End: "405f8fbb83e84e158bc77c2f3a043ec0",
        Id: "43f7bc07072b479ea2a5d386d3506ea5",
        IsHidden: "False",
      },
      {
        Start: "b313846bf8cb4e9fbac8c30f9c06aab0",
        End: "80550ade68cf491aa47647665622521b",
        Id: "53ec94edf7ad487aaaa33c4f921c1c9d",
        IsHidden: "False",
      },
      {
        Start: "b313846bf8cb4e9fbac8c30f9c06aab0",
        End: "4926f54dc4494b64bbbc13d221bbf49c",
        Id: "4824b6d65abc47c0abc6243eea21dcb6",
        IsHidden: "False",
      },
      {
        Start: "b313846bf8cb4e9fbac8c30f9c06aab0",
        End: "637f845a30594af5a38bbaa412a0fa43",
        Id: "da533ec9019f42f096fba29dd628c099",
        IsHidden: "False",
      },
      {
        Start: "a3d6d9b2c86a42eba6674fc7a6780cbf",
        End: "b5db1379abc442ad9bd77133dd295fa9",
        Id: "3120d6c73b7e4d74b3c2c6751a0605d7",
        IsHidden: "False",
      },
      {
        Start: "70040a3f34d144c59ba47fcc52d464fe",
        End: "834fda1794954c429d95b7578c1d0d1d",
        Id: "24cf911b0c4a4c4896d9e8fd7464c0a8",
        IsHidden: "False",
      },
      {
        Start: "825768281bf146bcad6f430ac7912c2f",
        End: "fe4eb93bc623459aa051014eafa69246",
        Id: "d3c619e91a9b42888335230f11eca730",
        IsHidden: "False",
      },
      {
        Start: "0b04d336785843c1be25ea5d33215e4e",
        End: "10cfc1e46fbb4a41ac930facf519c215",
        Id: "43ca3566beef48e98f94f216488394bd",
        IsHidden: "False",
      },
      {
        Start: "bcc55bec2f674a508733c88933192a47",
        End: "a6940b20bc024483aea613f63e9e4e28",
        Id: "05a2b39fa8474eaf972b622eda11b299",
        IsHidden: "False",
      },
      {
        Start: "da8806554ef84088b5f588f608c979c2",
        End: "fd16ec048c6146a28b4c50109d9d40b3",
        Id: "b77d91838aab42aa9cc23dc74d42d628",
        IsHidden: "False",
      },
      {
        Start: "b219b87ba74a4e6b99b63666ec499343",
        End: "bd18ae0ed10146f48dcebfcd84721935",
        Id: "ce761f1ac7304a56834b529777b55d52",
        IsHidden: "False",
      },
      {
        Start: "88a4b43a6cf24349bb077509489639dc",
        End: "748c7210f0194709a1c5fb5bc6f55838",
        Id: "0155d7a49720459592b1b601aa822707",
        IsHidden: "False",
      },
      {
        Start: "bda30a34568f4e0ca7688b8effd6d75f",
        End: "5460a77a349446589fc96d2e367c52f0",
        Id: "e2b3f92886fb4d9b86ba134d1332b181",
        IsHidden: "False",
      },
      {
        Start: "7d939de09692439291a7c6c20435cb53",
        End: "646af92c4f084598bb0a4f60f81fa56b",
        Id: "45b60ac1c95c43a69c0156cc0de4c043",
        IsHidden: "False",
      },
      {
        Start: "08932e07e88042568c8704d99af5f8b7",
        End: "12e452687fa84a2294d3ab3265ec6feb",
        Id: "5976040a9c2944b4a66a4bed2ab10e42",
        IsHidden: "False",
      },
      {
        Start: "08f7f90ed09d4a4893dac00b9484e203",
        End: "397aa33faddd41dab46fbd5aae129897",
        Id: "efefd081616d4ca4807f1cbcf2f40b77",
        IsHidden: "False",
      },
      {
        Start: "98271401ca894209989d2a48eb95e24b",
        End: "3c09848cf3894a4e8fb32e0557819c91",
        Id: "344672c425ad40d88fd7b2f3e7eb1761",
        IsHidden: "False",
      },
      {
        Start: "49c0d6c821fb4fc083d3327c45edeb58",
        End: "911a36b78046473eb9fcbe5788303580",
        Id: "ec928759511341efbefec25918d8033c",
        IsHidden: "False",
      },
      {
        Start: "8a89b057d36a4e74a6d37bd2eda41c20",
        End: "3b591bdb90324768acaf0103c44dd030",
        Id: "ce24362f74b94a75a628e8e2b1bda841",
        IsHidden: "False",
      },
      {
        Start: "8a89b057d36a4e74a6d37bd2eda41c20",
        End: "9388436b6e6844538238079976f40472",
        Id: "a81dec87958742d4acd57d0fad572827",
        IsHidden: "False",
      },
      {
        Start: "364184da95694daeb3ff478ac822fd3d",
        End: "9e8d1db2c4a341a0862a7f80477f5ad5",
        Id: "e556112f2af84c4cbca8242c3e2ba03f",
        IsHidden: "False",
      },
      {
        Start: "3186f688d0a94c7ba2c5f3b26fc28ddf",
        End: "be7e577327fe479b8e57f520694d31f1",
        Id: "148589e8f30243a1a8708171e2f2059b",
        IsHidden: "False",
      },
      {
        Start: "3186f688d0a94c7ba2c5f3b26fc28ddf",
        End: "e751405e2f7b402194cea09a8eb85479",
        Id: "7882c8159747409ba1741de93de7d5f1",
        IsHidden: "False",
      },
      {
        Start: "02c137be8f57432aaa5334bbb33e5ad9",
        End: "5dd468cdda5b423f97c6d70f0511039e",
        Id: "eb8437d5103d4c23ba1d07439f8ae233",
        IsHidden: "False",
      },
      {
        Start: "02c137be8f57432aaa5334bbb33e5ad9",
        End: "f1b7e0579a794dc9abb10e3706442d44",
        Id: "a03083437ed74786848b1bf1395720a0",
        IsHidden: "False",
      },
      {
        Start: "357b9010dc4a478388f1297bbbb08629",
        End: "904eaf9a4e8741bd9b408761a88daf00",
        Id: "6d41fae300b945d3ba8ae98bf3efc75f",
        IsHidden: "False",
      },
      {
        Start: "709d15741ba140d0902aad8b2141a09a",
        End: "c7a4087305564f35b3f2b9a06f319006",
        Id: "caec7f067662408abf1f1ae1b34ec6a9",
        IsHidden: "False",
      },
      {
        Start: "63fa67781cc641a7b312841f569b6011",
        End: "91b7bf8be8db415bb6ca7c60b97936db",
        Id: "382e1b5419f74a4cabff9f12c6208595",
        IsHidden: "False",
      },
      {
        Start: "c4c9fd45688744a49839c89d51f5270c",
        End: "7a46b92ea0d84547848218b13c0c2d8c",
        Id: "85280aca499546e8be13302dd8300cbb",
        IsHidden: "False",
      },
      {
        Start: "a092253bf9d646dbbdd30812950ba6ff",
        End: "4ee67eeaab044add853e670a50638e70",
        Id: "f17843ab9ad640f2b9030e5b79a3aa24",
        IsHidden: "False",
      },
    ],
    Dependencies: [],
    NodeLibraryDependencies: [],
    Thumbnail: "",
    GraphDocumentationURL: null,
    ExtensionWorkspaceData: [
      {
        ExtensionGuid: "28992e1d-abb9-417f-8b1b-05e053bee670",
        Name: "Properties",
        Version: "2.15",
        Data: {},
      },
      {
        ExtensionGuid: "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
        Name: "Generative Design",
        Version: "1.2",
        Data: {},
      },
    ],
    Author: "",
    Linting: {
      activeLinter: "None",
      activeLinterId: "7b75fb44-43fd-4631-a878-29f4d5d8399a",
      warningCount: 0,
      errorCount: 0,
    },
    Bindings: [],
    View: {
      Dynamo: {
        ScaleFactor: 1,
        HasRunWithoutCrash: true,
        IsVisibleInDynamoLibrary: true,
        Version: "2.19.0.5377",
        RunType: "Automatic",
        RunPeriod: "1000",
      },
      Camera: {
        Name: "_Background Preview",
        EyeX: -453.12432861328125,
        EyeY: 223.8509063720703,
        EyeZ: -15.380279541015625,
        LookX: 606.2717895507812,
        LookY: -219.8396759033203,
        LookZ: -151.84243774414062,
        UpX: 0.11821345239877701,
        UpY: 0.992546796798706,
        UpZ: -0.029607294127345085,
      },
      ConnectorPins: [],
      NodeViews: [
        {
          Id: "128be51ccd74486f8ff58b5ce8ecb73a",
          Name: "Data.ParseJSON",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 3342.985627887718,
          Y: -1241.220433317026,
        },
        {
          Id: "fe5908528fba41b8b5e0d95d2613f9ac",
          Name: "List.TakeEveryNthItem",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 4461.389476870509,
          Y: -1347.199481037546,
        },
        {
          Id: "9b6ef37dc479493892dbb6b3554ae569",
          Name: "Code Block",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 3870.419487387608,
          Y: -1163.227256708586,
        },
        {
          Id: "83e724cc9677448fab744e4c47940982",
          Name: "List.TakeEveryNthItem",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 4431.8464902157575,
          Y: -1128.068560614766,
        },
        {
          Id: "82acc36839f24d77a669fa1c2b793f69",
          Name: "List.TakeEveryNthItem",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 4432.320182305139,
          Y: -920.3974021134759,
        },
        {
          Id: "c5755ae5f27646be9ba72089ddb3a878",
          Name: "Point.ByCoordinates",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: false,
          X: 4903.835675001788,
          Y: -1161.6726395955059,
        },
        {
          Id: "20b2ecc9a2274451b5318b5dd3e556b9",
          Name: "List.Chop",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: false,
          X: 5314.309553247507,
          Y: -1015.776573174056,
        },
        {
          Id: "21f1d60e83a4458bae841a0f1c6b74ac",
          Name: "PolyCurve.ByPoints",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: false,
          X: 5911.099461421629,
          Y: -1127.999504259576,
        },
        {
          Id: "fd40022429224e60a6e04ea81b715fd6",
          Name: "Code Block",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 5664.539446826679,
          Y: -1003.748537275766,
        },
        {
          Id: "70bf67c97a7a41ecad20923943ec209a",
          Name: "Data.ParseJSON",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 3646.079734333539,
          Y: -2412.978216141534,
        },
        {
          Id: "1e9cca661e45491091fa8a18dba4800c",
          Name: "Code Block",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 3909.963657340737,
          Y: -2248.732333044577,
        },
        {
          Id: "7db6ab9c9b7345c999bb95e378877100",
          Name: "List.TakeEveryNthItem",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 4467.0959377039235,
          Y: -2448.076596428157,
        },
        {
          Id: "9c82d01f09264c3e9bf5ce46e6778300",
          Name: "List.TakeEveryNthItem",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 4466.933590613047,
          Y: -2219.9449642234317,
        },
        {
          Id: "70a8691e4ccf42e28564e5e5bf785714",
          Name: "Code Block",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 3905.15349265924,
          Y: -2075.7427109369946,
        },
        {
          Id: "4fff2d6b564a488285cc34348515352f",
          Name: "Point.ByCoordinates",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: false,
          X: 4943.379844954918,
          Y: -2247.177715931497,
        },
        {
          Id: "9218748837134c49842f1e95d5a34797",
          Name: "List.TakeEveryNthItem",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 4471.864352258268,
          Y: -2005.9024784494668,
        },
        {
          Id: "1002017481704f15adf8903b198c467f",
          Name: "List.Chop",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: false,
          X: 5353.8537232006365,
          Y: -2101.281649510047,
        },
        {
          Id: "2edd85c3af2c48e5b1a49b556419eeb2",
          Name: "Code Block",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 5704.083616779808,
          Y: -2089.253613611757,
        },
        {
          Id: "d928b939c4554f3cb252738de89c37f0",
          Name: "PolyCurve.ByPoints",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: false,
          X: 5950.643631374758,
          Y: -2213.504580595567,
        },
        {
          Id: "b88272adde26402e825c547ff709f4b7",
          Name: "Boolean",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: false,
          X: 5953.727577358737,
          Y: -883.0625180926561,
        },
        {
          Id: "3b37fa58cb5d420d9626b9ae62ddd10e",
          Name: "List.Clean",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: false,
          X: 6360.396343843602,
          Y: -1103.4158854189743,
        },
        {
          Id: "b80edbf25018439c8e8f763db645580c",
          Name: "Boolean",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: false,
          X: 6054.49617048753,
          Y: -1889.4625562859896,
        },
        {
          Id: "87a61d815e44460fbd909815ae1ec6d7",
          Name: "List.Clean",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: false,
          X: 6355.717637996168,
          Y: -2172.927046505378,
        },
        {
          Id: "cc677d46c8f14616bb4ae51ed8c15d6d",
          Name: "Surface.ByPatch",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: false,
          X: 6701.381759300736,
          Y: -2208.54805011621,
        },
        {
          Id: "606dd537fbd44b9aa806e301c41daf2e",
          Name: "Solid.ByJoinedSurfaces",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: false,
          X: 7398.339674254796,
          Y: -2201.9739170967764,
        },
        {
          Id: "d5eda0e3ecee43fb913f8b2287ac43c8",
          Name: "Surface.ByPatch",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: false,
          X: 6745.261297835097,
          Y: -1172.086836989916,
        },
        {
          Id: "73df0dde4dee45b4bc2d340f9ef095e3",
          Name: "Solid.ByJoinedSurfaces",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: false,
          X: 7451.252775559416,
          Y: -1168.5864875749085,
        },
        {
          Id: "50ab2c51c7b6488180750e6a253225e1",
          Name: "Solid.DifferenceAll",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: false,
          X: 8518.911080598207,
          Y: -1994.0241246991034,
        },
        {
          Id: "1880938c965c4810801e8ab061012adc",
          Name: "GeometryColor.ByGeometryColor",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 8937.477028086003,
          Y: -2205.298046756039,
        },
        {
          Id: "f637b711d7554fa1a73112793aa168e9",
          Name: "Color Palette",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 8406.424763256653,
          Y: -2435.843240701791,
        },
        {
          Id: "ee1431a5c6bf40cbb702ea2d46f86457",
          Name: "Color Palette",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 8669.07372616395,
          Y: -2166.39071628316,
        },
        {
          Id: "55ac957847964ace98e11c711e326410",
          Name: "Solid.Difference",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 8900.257104804014,
          Y: -1862.149514847591,
        },
        {
          Id: "b5dfb4ac51a9482496fe46ee182ee371",
          Name: "GeometryColor.ByGeometryColor",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 8716.879618925977,
          Y: -2572.85707901745,
        },
        {
          Id: "501390e0b493450698ef5b97b4458b4b",
          Name: "Code Block",
          IsSetAsInput: false,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 3868.034505278848,
          Y: -994.2796055555659,
        },
        {
          Id: "57d3a29891014ef89bac997b62da466c",
          Name: "Contraints",
          IsSetAsInput: true,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 1928.52934833356,
          Y: -2806.6561535460282,
        },
        {
          Id: "61ac694796d9473d8c24b94c24df829f",
          Name: "Proposal",
          IsSetAsInput: true,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 2330.507469112014,
          Y: -1461.4350865257977,
        },

        {
          Id: "ed33cc713fd944319fe1d0516b764c4b",
          Name: "Surroundings",
          IsSetAsInput: true,
          IsSetAsOutput: false,
          Excluded: false,
          ShowGeometry: true,
          X: 2330.507469112014,
          Y: -3461.4350865257977,
        },
      ],
      Annotations: [],
      X: -26.827745453604194,
      Y: 457.9325371601293,
      Zoom: 0.05897138788827377,
    },
  };
}
